package model_Service;

import model_Service.common.AppModule;

import oracle.adf.model.BindingContext;


import oracle.binding.BindingContainer;
import oracle.binding.OperationBinding;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Oct 17 17:25:16 IST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppModuleImpl extends ApplicationModuleImpl implements AppModule {
    /**
     * This is the default constructor (do not remove).
     */
    public AppModuleImpl() {
    }

    /**
     * Container's getter for StaffView1.
     * @return StaffView1
     */
    public ViewObjectImpl getStaffView1() {
        return (ViewObjectImpl)findViewObject("StaffView1");
    }

    /**
     * Container's getter for TeacherClassView1.
     * @return TeacherClassView1
     */
    public ViewObjectImpl getTeacherClassView1() {
        return (ViewObjectImpl)findViewObject("TeacherClassView1");
    }

    /**
     * Container's getter for StudentsView1.
     * @return StudentsView1
     */
    public ViewObjectImpl getStudentsView1() {
        return (ViewObjectImpl)findViewObject("StudentsView1");
    }

    /**
     * Container's getter for ClassDivView1.
     * @return ClassDivView1
     */
    public ViewObjectImpl getClassDivView1() {
        return (ViewObjectImpl)findViewObject("ClassDivView1");
    }

    /**
     * Container's getter for StudentsView2.
     * @return StudentsView2
     */
    public ViewObjectImpl getStudentsView2() {
        return (ViewObjectImpl)findViewObject("StudentsView2");
    }

    /**
     * Container's getter for FeesView1.
     * @return FeesView1
     */
    public ViewObjectImpl getFeesView1() {
        return (ViewObjectImpl)findViewObject("FeesView1");
    }

    /**
     * Container's getter for StudentFee1.
     * @return StudentFee1
     */
    public ViewObjectImpl getStudentFee1() {
        return (ViewObjectImpl)findViewObject("StudentFee1");
    }

    /**
     * Container's getter for TeacherToClass.
     * @return TeacherToClass
     */
    public ViewObjectImpl getTeacherToClass() {
        return (ViewObjectImpl)findViewObject("TeacherToClass");
    }

    /**
     * Container's getter for LedgerExpence.
     * @return LedgerExpence
     */
    public ViewObjectImpl getLedgerExpence() {
        return (ViewObjectImpl)findViewObject("LedgerExpence");
    }

    /**
     * Container's getter for LedgerFee.
     * @return LedgerFee
     */
    public ViewObjectImpl getLedgerFee() {
        return (ViewObjectImpl)findViewObject("LedgerFee");
    }

    /**
     * Container's getter for ExpencesView1.
     * @return ExpencesView1
     */
    public ViewObjectImpl getExpencesView1() {
        return (ViewObjectImpl)findViewObject("ExpencesView1");
    }

    /**
     * Container's getter for AttendenceView1.
     * @return AttendenceView1
     */
    public ViewObjectImpl getAttendenceView1() {
        return (ViewObjectImpl)findViewObject("AttendenceView1");
    }

    /**
     * Container's getter for TakeAttendence.
     * @return TakeAttendence
     */
    public ViewObjectImpl getTakeAttendence() {
        return (ViewObjectImpl)findViewObject("TakeAttendence");
    }

    /**
     * Container's getter for DummyClassListVO1.
     * @return DummyClassListVO1
     */
    public ViewObjectImpl getDummyClassListVO1() {
        return (ViewObjectImpl)findViewObject("DummyClassListVO1");
    }

    /**
     * Container's getter for StudentsAttendence.
     * @return StudentsAttendence
     */
    public ViewObjectImpl getStudentsAttendence() {
        return (ViewObjectImpl)findViewObject("StudentsAttendence");
    }

    /**
     * Container's getter for TeacherClassStaffFk1Link1.
     * @return TeacherClassStaffFk1Link1
     */
    public ViewLinkImpl getTeacherClassStaffFk1Link1() {
        return (ViewLinkImpl)findViewLink("TeacherClassStaffFk1Link1");
    }

    /**
     * Container's getter for StudentsClassDivFk1Link1.
     * @return StudentsClassDivFk1Link1
     */
    public ViewLinkImpl getStudentsClassDivFk1Link1() {
        return (ViewLinkImpl)findViewLink("StudentsClassDivFk1Link1");
    }

    /**
     * Container's getter for FeesStudentsFk1Link1.
     * @return FeesStudentsFk1Link1
     */
    public ViewLinkImpl getFeesStudentsFk1Link1() {
        return (ViewLinkImpl)findViewLink("FeesStudentsFk1Link1");
    }

    /**
     * Container's getter for TeacherClassClassDivFk1Link1.
     * @return TeacherClassClassDivFk1Link1
     */
    public ViewLinkImpl getTeacherClassClassDivFk1Link1() {
        return (ViewLinkImpl)findViewLink("TeacherClassClassDivFk1Link1");
    }

    public void takeAttendence(String d) {
        ViewObjectImpl vo = this.getStudentsAttendence();
        ViewCriteria vc = vo.getViewCriteria("fndByClsId");
        vo.setNamedWhereClauseParam("BClassId", d);
        vo.applyViewCriteria(vc);
        vo.executeQuery();
        ViewObjectImpl vo1 = this.getTakeAttendence();
        ViewCriteria vc1 = vo1.getViewCriteria("fndByClsId");
        vo1.setNamedWhereClauseParam("bClsId", d);
        vo1.applyViewCriteria(vc1);
        vo1.executeQuery();
        // ViewCriteria vc2 = vo1.getViewCriteria("fndByDate");
        // vo1.setWhereClause("bDate");
        // vo1.applyViewCriteria(vc2);

        RowSetIterator rs = vo.createRowSetIterator(null);
        while (rs.hasNext()) {
            Row r = rs.next();
            ViewObjectImpl vo2 = this.getTakeAttendence();
            BindingContext bctx = BindingContext.getCurrent();
            BindingContainer bc = bctx.getCurrentBindingsEntry();
            OperationBinding ob = bc.getOperationBinding("CreateInsert3");
            ob.execute();
            // SequenceImpl sq = new SequenceImpl("ATTEND_SEQ",getDBTransaction());
            // setSlNo(sq.getSequenceNumber());
            RowSetIterator rs1 = vo2.createRowSetIterator(null);
            Row r1 = rs1.next();
            // r1.setAttribute("SlNo", sq.getSequenceNumber());
            r1.setAttribute("StudentId", r.getAttribute("StudentId"));
            r1.setAttribute("StudentName", r.getAttribute("StuddentName"));
            r1.setAttribute("Class1", r.getAttribute("ClsdivId"));
        }

    }

    /**
     * Container's getter for DashBoardStaticsRVO1.
     * @return DashBoardStaticsRVO1
     */
    public ViewObjectImpl getDashBoardStaticsRVO1() {
        return (ViewObjectImpl)findViewObject("DashBoardStaticsRVO1");
    }

    /**
     * Container's getter for TodaysAttendenceRVO1.
     * @return TodaysAttendenceRVO1
     */
    public ViewObjectImpl getTodaysAttendenceRVO1() {
        return (ViewObjectImpl)findViewObject("TodaysAttendenceRVO1");
    }

    /**
     * Container's getter for TodaysLedgerDASH.
     * @return TodaysLedgerDASH
     */
    public ViewObjectImpl getTodaysLedgerDASH() {
        return (ViewObjectImpl)findViewObject("TodaysLedgerDASH");
    }

    /**
     * Container's getter for TotalFeeandExpenceRVO1.
     * @return TotalFeeandExpenceRVO1
     */
    public ViewObjectImpl getTotalFeeandExpenceRVO1() {
        return (ViewObjectImpl)findViewObject("TotalFeeandExpenceRVO1");
    }

    public void SalaryRaise(int i) {
        ViewObjectImpl vo = this.getStaffView1();
        RowSetIterator rs = vo.createRowSetIterator(null);
        while (rs.hasNext()) {
            Row r = rs.next();
            int Sal = (Integer)r.getAttribute("Salary");
            int newSal = (Sal + ((Sal * i) / 100));
            Object fnlSal = newSal;
            r.setAttribute("Salary", fnlSal);
        }
        //        int newSal = SALARY + (SALARY * i) / 100;
        //        oracle.jbo.domain.Number num = new oracle.jbo.domain.Number(newSal);
        //        this.setSalary(num);
        //        RowSet emp = (RowSet)getStaffView();
        //        while (emp.hasNext()) {
        //            StaffViewRowImpl cr = (StaffViewRowImpl)emp.next();
        //            int newSal = cr.SALARY + (cr.SALARY * i) / 100;
        //            oracle.jbo.domain.Number num =
        //                new oracle.jbo.domain.Number(newSal);
        //            cr.setSalary(num);
    }


    /**
     * Container's getter for NewStudentsMarksView1.
     * @return NewStudentsMarksView1
     */
    public ViewObjectImpl getNewStudentsMarksView1() {
        return (ViewObjectImpl)findViewObject("NewStudentsMarksView1");
    }

    /**
     * Container's getter for UsersVO1.
     * @return UsersVO1
     */
    public ViewObjectImpl getUsersVO1() {
        return (ViewObjectImpl)findViewObject("UsersVO1");
    }

    public UserData findUser(String UName, String Pswd) {
        UserData user = null;
        ViewObjectImpl vo = this.getUsersVO1();
        ViewCriteria vc = vo.getViewCriteria("SearchUser");
        vo.setNamedWhereClauseParam("bUser", UName);
        vo.setNamedWhereClauseParam("bPassword", Pswd);
        vo.applyViewCriteria(vc);
        vo.executeQuery();
        RowSetIterator rs = vo.createRowSetIterator(null);
        if (rs.hasNext()) {
            user = new UserData();
            Row r = rs.next();
            user.setUserName(r.getAttribute("Username").toString());
            System.out.println("AM method exicuted");
        }
        return user;
    }

    public void marksEntry(String Exam, String Class) {

            ViewObjectImpl vo = this.getStudentsAttendence();
            ViewCriteria vc = vo.getViewCriteria("fndByClsId");
            vo.setNamedWhereClauseParam("BClassId", Class);
            vo.applyViewCriteria(vc);
            vo.executeQuery();
            ViewObjectImpl vo1 = this.getNewStudentsMarksView1();
            ViewCriteria vc1 = vo1.getViewCriteria("fndByClsId");
            vo1.setNamedWhereClauseParam("bclsId", Class);
            vo1.applyViewCriteria(vc1);
            vo1.executeQuery();
            RowSetIterator rs = vo.createRowSetIterator(null);
            while (rs.hasNext()) {
                Row r = rs.next();
                ViewObjectImpl vo2 = this.getNewStudentsMarksView1();
                BindingContext bctx = BindingContext.getCurrent();
                BindingContainer bc = bctx.getCurrentBindingsEntry();
                OperationBinding ob = bc.getOperationBinding("CreateInsert6");
                ob.execute();
                RowSetIterator rs1 = vo2.createRowSetIterator(null);
                Row r1 = rs1.next();
                r1.setAttribute("StudentId", r.getAttribute("StudentId"));
                r1.setAttribute("StudentName", r.getAttribute("StuddentName"));
                r1.setAttribute("Class1", r.getAttribute("ClsdivId"));
                r1.setAttribute("Exam", Exam);
            }
    }

    /**
     * Container's getter for NewStudentsMarksViewRecord.
     * @return NewStudentsMarksViewRecord
     */
    public ViewObjectImpl getNewStudentsMarksViewRecord() {
        return (ViewObjectImpl)findViewObject("NewStudentsMarksViewRecord");
    }

    /**
     * Container's getter for StaffBirthdays1.
     * @return StaffBirthdays1
     */
    public ViewObjectImpl getStaffBirthdays1() {
        return (ViewObjectImpl)findViewObject("StaffBirthdays1");
    }

    /**
     * Container's getter for StudentsBirthdays1.
     * @return StudentsBirthdays1
     */
    public ViewObjectImpl getStudentsBirthdays1() {
        return (ViewObjectImpl)findViewObject("StudentsBirthdays1");
    }
}
