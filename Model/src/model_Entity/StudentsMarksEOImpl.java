package model_Entity;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Oct 24 13:28:10 IST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class StudentsMarksEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlNo {
            public Object get(StudentsMarksEOImpl obj) {
                return obj.getSlNo();
            }

            public void put(StudentsMarksEOImpl obj, Object value) {
                obj.setSlNo((Number)value);
            }
        }
        ,
        StudentId {
            public Object get(StudentsMarksEOImpl obj) {
                return obj.getStudentId();
            }

            public void put(StudentsMarksEOImpl obj, Object value) {
                obj.setStudentId((Number)value);
            }
        }
        ,
        StudentName {
            public Object get(StudentsMarksEOImpl obj) {
                return obj.getStudentName();
            }

            public void put(StudentsMarksEOImpl obj, Object value) {
                obj.setStudentName((String)value);
            }
        }
        ,
        Class1 {
            public Object get(StudentsMarksEOImpl obj) {
                return obj.getClass1();
            }

            public void put(StudentsMarksEOImpl obj, Object value) {
                obj.setClass1((String)value);
            }
        }
        ,
        Exam {
            public Object get(StudentsMarksEOImpl obj) {
                return obj.getExam();
            }

            public void put(StudentsMarksEOImpl obj, Object value) {
                obj.setExam((String)value);
            }
        }
        ,
        Sub1 {
            public Object get(StudentsMarksEOImpl obj) {
                return obj.getSub1();
            }

            public void put(StudentsMarksEOImpl obj, Object value) {
                obj.setSub1((Number)value);
            }
        }
        ,
        Sub2 {
            public Object get(StudentsMarksEOImpl obj) {
                return obj.getSub2();
            }

            public void put(StudentsMarksEOImpl obj, Object value) {
                obj.setSub2((Number)value);
            }
        }
        ,
        Sub3 {
            public Object get(StudentsMarksEOImpl obj) {
                return obj.getSub3();
            }

            public void put(StudentsMarksEOImpl obj, Object value) {
                obj.setSub3((Number)value);
            }
        }
        ,
        Sub4 {
            public Object get(StudentsMarksEOImpl obj) {
                return obj.getSub4();
            }

            public void put(StudentsMarksEOImpl obj, Object value) {
                obj.setSub4((Number)value);
            }
        }
        ,
        Sub5 {
            public Object get(StudentsMarksEOImpl obj) {
                return obj.getSub5();
            }

            public void put(StudentsMarksEOImpl obj, Object value) {
                obj.setSub5((Number)value);
            }
        }
        ,
        Sub6 {
            public Object get(StudentsMarksEOImpl obj) {
                return obj.getSub6();
            }

            public void put(StudentsMarksEOImpl obj, Object value) {
                obj.setSub6((Number)value);
            }
        }
        ,
        Total {
            public Object get(StudentsMarksEOImpl obj) {
                return obj.getTotal();
            }

            public void put(StudentsMarksEOImpl obj, Object value) {
                obj.setTotal((Number)value);
            }
        }
        ,
        Grade {
            public Object get(StudentsMarksEOImpl obj) {
                return obj.getGrade();
            }

            public void put(StudentsMarksEOImpl obj, Object value) {
                obj.setGrade((String)value);
            }
        }
        ,
        StudentsEO {
            public Object get(StudentsMarksEOImpl obj) {
                return obj.getStudentsEO();
            }

            public void put(StudentsMarksEOImpl obj, Object value) {
                obj.setStudentsEO((StudentsEOImpl)value);
            }
        }
        ,
        ClassDivEO {
            public Object get(StudentsMarksEOImpl obj) {
                return obj.getClassDivEO();
            }

            public void put(StudentsMarksEOImpl obj, Object value) {
                obj.setClassDivEO((EntityImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(StudentsMarksEOImpl object);

        public abstract void put(StudentsMarksEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int SLNO = AttributesEnum.SlNo.index();
    public static final int STUDENTID = AttributesEnum.StudentId.index();
    public static final int STUDENTNAME = AttributesEnum.StudentName.index();
    public static final int CLASS1 = AttributesEnum.Class1.index();
    public static final int EXAM = AttributesEnum.Exam.index();
    public static final int SUB1 = AttributesEnum.Sub1.index();
    public static final int SUB2 = AttributesEnum.Sub2.index();
    public static final int SUB3 = AttributesEnum.Sub3.index();
    public static final int SUB4 = AttributesEnum.Sub4.index();
    public static final int SUB5 = AttributesEnum.Sub5.index();
    public static final int SUB6 = AttributesEnum.Sub6.index();
    public static final int TOTAL = AttributesEnum.Total.index();
    public static final int GRADE = AttributesEnum.Grade.index();
    public static final int STUDENTSEO = AttributesEnum.StudentsEO.index();
    public static final int CLASSDIVEO = AttributesEnum.ClassDivEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public StudentsMarksEOImpl() {
    }

    /**
     * Gets the attribute value for SlNo, using the alias name SlNo.
     * @return the SlNo
     */
    public Number getSlNo() {
        return (Number)getAttributeInternal(SLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlNo.
     * @param value value to set the SlNo
     */
    public void setSlNo(Number value) {
        setAttributeInternal(SLNO, value);
    }

    /**
     * Gets the attribute value for StudentId, using the alias name StudentId.
     * @return the StudentId
     */
    public Number getStudentId() {
        return (Number)getAttributeInternal(STUDENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for StudentId.
     * @param value value to set the StudentId
     */
    public void setStudentId(Number value) {
        setAttributeInternal(STUDENTID, value);
    }

    /**
     * Gets the attribute value for StudentName, using the alias name StudentName.
     * @return the StudentName
     */
    public String getStudentName() {
        return (String)getAttributeInternal(STUDENTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for StudentName.
     * @param value value to set the StudentName
     */
    public void setStudentName(String value) {
        setAttributeInternal(STUDENTNAME, value);
    }

    /**
     * Gets the attribute value for Class1, using the alias name Class1.
     * @return the Class1
     */
    public String getClass1() {
        return (String)getAttributeInternal(CLASS1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Class1.
     * @param value value to set the Class1
     */
    public void setClass1(String value) {
        setAttributeInternal(CLASS1, value);
    }

    /**
     * Gets the attribute value for Exam, using the alias name Exam.
     * @return the Exam
     */
    public String getExam() {
        return (String)getAttributeInternal(EXAM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Exam.
     * @param value value to set the Exam
     */
    public void setExam(String value) {
        setAttributeInternal(EXAM, value);
    }

    /**
     * Gets the attribute value for Sub1, using the alias name Sub1.
     * @return the Sub1
     */
    public Number getSub1() {
        return (Number)getAttributeInternal(SUB1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Sub1.
     * @param value value to set the Sub1
     */
    public void setSub1(Number value) {
        setAttributeInternal(SUB1, value);
    }

    /**
     * Gets the attribute value for Sub2, using the alias name Sub2.
     * @return the Sub2
     */
    public Number getSub2() {
        return (Number)getAttributeInternal(SUB2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Sub2.
     * @param value value to set the Sub2
     */
    public void setSub2(Number value) {
        setAttributeInternal(SUB2, value);
    }

    /**
     * Gets the attribute value for Sub3, using the alias name Sub3.
     * @return the Sub3
     */
    public Number getSub3() {
        return (Number)getAttributeInternal(SUB3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Sub3.
     * @param value value to set the Sub3
     */
    public void setSub3(Number value) {
        setAttributeInternal(SUB3, value);
    }

    /**
     * Gets the attribute value for Sub4, using the alias name Sub4.
     * @return the Sub4
     */
    public Number getSub4() {
        return (Number)getAttributeInternal(SUB4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Sub4.
     * @param value value to set the Sub4
     */
    public void setSub4(Number value) {
        setAttributeInternal(SUB4, value);
    }

    /**
     * Gets the attribute value for Sub5, using the alias name Sub5.
     * @return the Sub5
     */
    public Number getSub5() {
        return (Number)getAttributeInternal(SUB5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Sub5.
     * @param value value to set the Sub5
     */
    public void setSub5(Number value) {
        setAttributeInternal(SUB5, value);
    }

    /**
     * Gets the attribute value for Sub6, using the alias name Sub6.
     * @return the Sub6
     */
    public Number getSub6() {
        return (Number)getAttributeInternal(SUB6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Sub6.
     * @param value value to set the Sub6
     */
    public void setSub6(Number value) {
        setAttributeInternal(SUB6, value);
    }

    /**
     * Gets the attribute value for Total, using the alias name Total.
     * @return the Total
     */
    public Number getTotal() {
        return (Number)getAttributeInternal(TOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Total.
     * @param value value to set the Total
     */
    public void setTotal(Number value) {
        setAttributeInternal(TOTAL, value);
    }

    /**
     * Gets the attribute value for Grade, using the alias name Grade.
     * @return the Grade
     */
    public String getGrade() {
        return (String)getAttributeInternal(GRADE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Grade.
     * @param value value to set the Grade
     */
    public void setGrade(String value) {
        setAttributeInternal(GRADE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity StudentsEOImpl.
     */
    public StudentsEOImpl getStudentsEO() {
        return (StudentsEOImpl)getAttributeInternal(STUDENTSEO);
    }

    /**
     * Sets <code>value</code> as the associated entity StudentsEOImpl.
     */
    public void setStudentsEO(StudentsEOImpl value) {
        setAttributeInternal(STUDENTSEO, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getClassDivEO() {
        return (EntityImpl)getAttributeInternal(CLASSDIVEO);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setClassDivEO(EntityImpl value) {
        setAttributeInternal(CLASSDIVEO, value);
    }

    /**
     * @param slNo key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number slNo) {
        return new Key(new Object[]{slNo});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model_Entity.StudentsMarksEO");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl se = new SequenceImpl("MARKS_SEQ",getDBTransaction());
        this.setSlNo(se.getSequenceNumber());
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
