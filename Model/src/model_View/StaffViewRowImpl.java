package model_View;

import model_Entity.StaffEOImpl;


import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 19 11:57:12 IST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class StaffViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        StaffId {
            public Object get(StaffViewRowImpl obj) {
                return obj.getStaffId();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setStaffId((Number)value);
            }
        }
        ,
        FullName {
            public Object get(StaffViewRowImpl obj) {
                return obj.getFullName();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setFullName((String)value);
            }
        }
        ,
        FatherName {
            public Object get(StaffViewRowImpl obj) {
                return obj.getFatherName();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setFatherName((String)value);
            }
        }
        ,
        Dateofbirth {
            public Object get(StaffViewRowImpl obj) {
                return obj.getDateofbirth();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setDateofbirth((Date)value);
            }
        }
        ,
        Gender {
            public Object get(StaffViewRowImpl obj) {
                return obj.getGender();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setGender((String)value);
            }
        }
        ,
        Phone {
            public Object get(StaffViewRowImpl obj) {
                return obj.getPhone();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setPhone((Number)value);
            }
        }
        ,
        Email {
            public Object get(StaffViewRowImpl obj) {
                return obj.getEmail();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setEmail((String)value);
            }
        }
        ,
        Aadhaar {
            public Object get(StaffViewRowImpl obj) {
                return obj.getAadhaar();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setAadhaar((Number)value);
            }
        }
        ,
        Address {
            public Object get(StaffViewRowImpl obj) {
                return obj.getAddress();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setAddress((String)value);
            }
        }
        ,
        Salary {
            public Object get(StaffViewRowImpl obj) {
                return obj.getSalary();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setSalary((Number)value);
            }
        }
        ,
        Photo {
            public Object get(StaffViewRowImpl obj) {
                return obj.getPhoto();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setPhoto((BlobDomain)value);
            }
        }
        ,
        JoinDate {
            public Object get(StaffViewRowImpl obj) {
                return obj.getJoinDate();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setJoinDate((Date)value);
            }
        }
        ,
        EducationalQualification {
            public Object get(StaffViewRowImpl obj) {
                return obj.getEducationalQualification();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setEducationalQualification((String)value);
            }
        }
        ,
        Subject {
            public Object get(StaffViewRowImpl obj) {
                return obj.getSubject();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setSubject((String)value);
            }
        }
        ,
        TeacherClassView {
            public Object get(StaffViewRowImpl obj) {
                return obj.getTeacherClassView();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Gender1 {
            public Object get(StaffViewRowImpl obj) {
                return obj.getGender1();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SubjectView1 {
            public Object get(StaffViewRowImpl obj) {
                return obj.getSubjectView1();
            }

            public void put(StaffViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(StaffViewRowImpl object);

        public abstract void put(StaffViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int STAFFID = AttributesEnum.StaffId.index();
    public static final int FULLNAME = AttributesEnum.FullName.index();
    public static final int FATHERNAME = AttributesEnum.FatherName.index();
    public static final int DATEOFBIRTH = AttributesEnum.Dateofbirth.index();
    public static final int GENDER = AttributesEnum.Gender.index();
    public static final int PHONE = AttributesEnum.Phone.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int AADHAAR = AttributesEnum.Aadhaar.index();
    public static final int ADDRESS = AttributesEnum.Address.index();
    public static final int SALARY = AttributesEnum.Salary.index();
    public static final int PHOTO = AttributesEnum.Photo.index();
    public static final int JOINDATE = AttributesEnum.JoinDate.index();
    public static final int EDUCATIONALQUALIFICATION = AttributesEnum.EducationalQualification.index();
    public static final int SUBJECT = AttributesEnum.Subject.index();
    public static final int TEACHERCLASSVIEW = AttributesEnum.TeacherClassView.index();
    public static final int GENDER1 = AttributesEnum.Gender1.index();
    public static final int SUBJECTVIEW1 = AttributesEnum.SubjectView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public StaffViewRowImpl() {
    }

    /**
     * Gets StaffEO entity object.
     * @return the StaffEO
     */
    public StaffEOImpl getStaffEO() {
        return (StaffEOImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for STAFF_ID using the alias name StaffId.
     * @return the STAFF_ID
     */
    public Number getStaffId() {
        return (Number)getAttributeInternal(STAFFID);
    }

    /**
     * Sets <code>value</code> as attribute value for STAFF_ID using the alias name StaffId.
     * @param value value to set the STAFF_ID
     */
    public void setStaffId(Number value) {
        setAttributeInternal(STAFFID, value);
    }

    /**
     * Gets the attribute value for FULL_NAME using the alias name FullName.
     * @return the FULL_NAME
     */
    public String getFullName() {
        return (String)getAttributeInternal(FULLNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FULL_NAME using the alias name FullName.
     * @param value value to set the FULL_NAME
     */
    public void setFullName(String value) {
        setAttributeInternal(FULLNAME, value);
    }

    /**
     * Gets the attribute value for FATHER_NAME using the alias name FatherName.
     * @return the FATHER_NAME
     */
    public String getFatherName() {
        return (String)getAttributeInternal(FATHERNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FATHER_NAME using the alias name FatherName.
     * @param value value to set the FATHER_NAME
     */
    public void setFatherName(String value) {
        setAttributeInternal(FATHERNAME, value);
    }

    /**
     * Gets the attribute value for DATEOFBIRTH using the alias name Dateofbirth.
     * @return the DATEOFBIRTH
     */
    public Date getDateofbirth() {
        return (Date)getAttributeInternal(DATEOFBIRTH);
    }

    /**
     * Sets <code>value</code> as attribute value for DATEOFBIRTH using the alias name Dateofbirth.
     * @param value value to set the DATEOFBIRTH
     */
    public void setDateofbirth(Date value) {
        setAttributeInternal(DATEOFBIRTH, value);
    }

    /**
     * Gets the attribute value for GENDER using the alias name Gender.
     * @return the GENDER
     */
    public String getGender() {
        return (String)getAttributeInternal(GENDER);
    }

    /**
     * Sets <code>value</code> as attribute value for GENDER using the alias name Gender.
     * @param value value to set the GENDER
     */
    public void setGender(String value) {
        setAttributeInternal(GENDER, value);
    }

    /**
     * Gets the attribute value for PHONE using the alias name Phone.
     * @return the PHONE
     */
    public Number getPhone() {
        return (Number)getAttributeInternal(PHONE);
    }

    /**
     * Sets <code>value</code> as attribute value for PHONE using the alias name Phone.
     * @param value value to set the PHONE
     */
    public void setPhone(Number value) {
        setAttributeInternal(PHONE, value);
    }

    /**
     * Gets the attribute value for EMAIL using the alias name Email.
     * @return the EMAIL
     */
    public String getEmail() {
        return (String)getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as attribute value for EMAIL using the alias name Email.
     * @param value value to set the EMAIL
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * Gets the attribute value for AADHAAR using the alias name Aadhaar.
     * @return the AADHAAR
     */
    public Number getAadhaar() {
        return (Number)getAttributeInternal(AADHAAR);
    }

    /**
     * Sets <code>value</code> as attribute value for AADHAAR using the alias name Aadhaar.
     * @param value value to set the AADHAAR
     */
    public void setAadhaar(Number value) {
        setAttributeInternal(AADHAAR, value);
    }

    /**
     * Gets the attribute value for ADDRESS using the alias name Address.
     * @return the ADDRESS
     */
    public String getAddress() {
        return (String)getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDRESS using the alias name Address.
     * @param value value to set the ADDRESS
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * Gets the attribute value for SALARY using the alias name Salary.
     * @return the SALARY
     */
    public Number getSalary() {
        return (Number)getAttributeInternal(SALARY);
    }

    /**
     * Sets <code>value</code> as attribute value for SALARY using the alias name Salary.
     * @param value value to set the SALARY
     */
    public void setSalary(Number value) {
        setAttributeInternal(SALARY, value);
    }

    /**
     * Gets the attribute value for PHOTO using the alias name Photo.
     * @return the PHOTO
     */
    public BlobDomain getPhoto() {
        return (BlobDomain)getAttributeInternal(PHOTO);
    }

    /**
     * Sets <code>value</code> as attribute value for PHOTO using the alias name Photo.
     * @param value value to set the PHOTO
     */
    public void setPhoto(BlobDomain value) {
        setAttributeInternal(PHOTO, value);
    }

    /**
     * Gets the attribute value for JOIN_DATE using the alias name JoinDate.
     * @return the JOIN_DATE
     */
    public Date getJoinDate() {
        return (Date)getAttributeInternal(JOINDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for JOIN_DATE using the alias name JoinDate.
     * @param value value to set the JOIN_DATE
     */
    public void setJoinDate(Date value) {
        setAttributeInternal(JOINDATE, value);
    }

    /**
     * Gets the attribute value for EDUCATIONAL_QUALIFICATION using the alias name EducationalQualification.
     * @return the EDUCATIONAL_QUALIFICATION
     */
    public String getEducationalQualification() {
        return (String)getAttributeInternal(EDUCATIONALQUALIFICATION);
    }

    /**
     * Sets <code>value</code> as attribute value for EDUCATIONAL_QUALIFICATION using the alias name EducationalQualification.
     * @param value value to set the EDUCATIONAL_QUALIFICATION
     */
    public void setEducationalQualification(String value) {
        setAttributeInternal(EDUCATIONALQUALIFICATION, value);
    }

    /**
     * Gets the attribute value for SUBJECT using the alias name Subject.
     * @return the SUBJECT
     */
    public String getSubject() {
        return (String)getAttributeInternal(SUBJECT);
    }

    /**
     * Sets <code>value</code> as attribute value for SUBJECT using the alias name Subject.
     * @param value value to set the SUBJECT
     */
    public void setSubject(String value) {
        setAttributeInternal(SUBJECT, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link TeacherClassView.
     */
    public RowIterator getTeacherClassView() {
        return (RowIterator)getAttributeInternal(TEACHERCLASSVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Gender1.
     */
    public RowSet getGender1() {
        return (RowSet)getAttributeInternal(GENDER1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SubjectView1.
     */
    public RowSet getSubjectView1() {
        return (RowSet)getAttributeInternal(SUBJECTVIEW1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    
    
}
